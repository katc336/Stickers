// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  username String  @unique
  password String
  classes  Class[]
}

model Class {
  id        Int       @id @default(autoincrement())
  name      String
  teacher   User      @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  teacherId Int
  students  Student[]
  lessons   Lesson[]
}

model Student {
  id              Int               @id @default(autoincrement())
  name            String
  class           Class             @relation(fields: [classId], references: [id], onDelete: Cascade)
  classId         Int
  attendances     Attendance[]
  studentProgress StudentProgress[]
}

model CombinedObjective {
  id                 Int                 @id @default(autoincrement())
  objectiveName      String              @unique
  learningObjectives LearningObjective[]
  studentProgress    StudentProgress[]
}

model Lesson {
  id                 Int                 @id @default(autoincrement())
  createdAt          DateTime            @default(now())
  lessonName         String
  class              Class               @relation(fields: [classId], references: [id], onDelete: Cascade)
  classId            Int
  learningObjectives LearningObjective[]
  attendances        Attendance[]
}

model Attendance {
  id        Int      @id @default(autoincrement())
  present   Boolean  @default(true)
  student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId Int
  lesson    Lesson   @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  lessonId  Int
  createdAt DateTime @default(now())
}

model LearningObjective {
  id                  Int               @id @default(autoincrement())
  objectiveName       String
  lesson              Lesson            @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  lessonId            Int
  combinedObjective   CombinedObjective @relation(fields: [combinedObjectiveId], references: [id], onDelete: Cascade)
  combinedObjectiveId Int
  studentProgress     StudentProgress[]
}

model StudentProgress {
  id                  Int               @id @default(autoincrement())
  student             Student           @relation(fields: [studentId], references: [id], onDelete: Cascade)
  studentId           Int
  learningObjective   LearningObjective @relation(fields: [objectiveId], references: [id], onDelete: Cascade)
  objectiveId         Int
  combinedObjective   CombinedObjective @relation(fields: [combinedObjectiveId], references: [id], onDelete: Cascade)
  combinedObjectiveId Int
  progressPrecent     Int
  createdAt           DateTime          @default(now())
}
